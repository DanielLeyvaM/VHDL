-- VHDL data flow description generated from `act5_boom`
--		date : Sun Nov 22 11:53:00 2020


-- Entity Declaration

ENTITY act5_boom IS
  PORT (
  clk : in BIT;	-- clk
  rst : in BIT;	-- rst
  ctrl : in BIT;	-- ctrl
  ctrl1 : in BIT;	-- ctrl1
  um : out bit_vector(3 DOWNTO 0) ;	-- um
  dm : out bit_vector(3 DOWNTO 0) ;	-- dm
  uh : out bit_vector(3 DOWNTO 0) ;	-- uh
  dh : out bit_vector(3 DOWNTO 0) ;	-- dh
  vdd : in BIT;	-- vdd
  vss : in BIT	-- vss
  );
END act5_boom;


-- Architecture Declaration

ARCHITECTURE behaviour_data_flow OF act5_boom IS
  SIGNAL rtlalc_12 : REG_VECTOR(3 DOWNTO 0) REGISTER;	-- rtlalc_12
  SIGNAL rtlalc_11 : REG_VECTOR(3 DOWNTO 0) REGISTER;	-- rtlalc_11
  SIGNAL rtlalc_10 : REG_VECTOR(3 DOWNTO 0) REGISTER;	-- rtlalc_10
  SIGNAL rtlalc_9 : REG_VECTOR(3 DOWNTO 0) REGISTER;	-- rtlalc_9
  SIGNAL mum : REG_VECTOR(3 DOWNTO 0) REGISTER;	-- mum
  SIGNAL mdm : REG_VECTOR(3 DOWNTO 0) REGISTER;	-- mdm
  SIGNAL muh : REG_VECTOR(3 DOWNTO 0) REGISTER;	-- muh
  SIGNAL mdh : REG_VECTOR(3 DOWNTO 0) REGISTER;	-- mdh
  SIGNAL cum : REG_VECTOR(3 DOWNTO 0) REGISTER;	-- cum
  SIGNAL cdm : REG_VECTOR(3 DOWNTO 0) REGISTER;	-- cdm
  SIGNAL cuh : REG_VECTOR(3 DOWNTO 0) REGISTER;	-- cuh
  SIGNAL cdh : REG_VECTOR(3 DOWNTO 0) REGISTER;	-- cdh
  SIGNAL stop : REG_BIT REGISTER;	-- stop
  SIGNAL maquina : REG_BIT REGISTER;	-- maquina
  SIGNAL aux1 : BIT;		-- aux1
  SIGNAL aux3 : BIT;		-- aux3
  SIGNAL aux4 : BIT;		-- aux4
  SIGNAL aux14 : BIT;		-- aux14
  SIGNAL aux16 : BIT;		-- aux16
  SIGNAL aux18 : BIT;		-- aux18
  SIGNAL aux24 : BIT;		-- aux24
  SIGNAL aux25 : BIT;		-- aux25
  SIGNAL aux31 : BIT;		-- aux31
  SIGNAL aux32 : BIT;		-- aux32
  SIGNAL aux33 : BIT;		-- aux33
  SIGNAL aux37 : BIT;		-- aux37
  SIGNAL aux38 : BIT;		-- aux38
  SIGNAL aux41 : BIT;		-- aux41
  SIGNAL aux42 : BIT;		-- aux42
  SIGNAL aux43 : BIT;		-- aux43
  SIGNAL aux44 : BIT;		-- aux44
  SIGNAL aux45 : BIT;		-- aux45
  SIGNAL aux48 : BIT;		-- aux48
  SIGNAL aux49 : BIT;		-- aux49
  SIGNAL aux54 : BIT;		-- aux54
  SIGNAL aux59 : BIT;		-- aux59
  SIGNAL aux60 : BIT;		-- aux60
  SIGNAL aux61 : BIT;		-- aux61
  SIGNAL aux62 : BIT;		-- aux62
  SIGNAL aux63 : BIT;		-- aux63
  SIGNAL aux64 : BIT;		-- aux64
  SIGNAL aux67 : BIT;		-- aux67
  SIGNAL aux68 : BIT;		-- aux68
  SIGNAL aux69 : BIT;		-- aux69
  SIGNAL aux70 : BIT;		-- aux70
  SIGNAL aux73 : BIT;		-- aux73
  SIGNAL aux74 : BIT;		-- aux74
  SIGNAL aux75 : BIT;		-- aux75
  SIGNAL aux76 : BIT;		-- aux76
  SIGNAL aux77 : BIT;		-- aux77
  SIGNAL aux78 : BIT;		-- aux78
  SIGNAL aux79 : BIT;		-- aux79
  SIGNAL aux87 : BIT;		-- aux87
  SIGNAL aux89 : BIT;		-- aux89
  SIGNAL aux90 : BIT;		-- aux90
  SIGNAL aux91 : BIT;		-- aux91
  SIGNAL aux93 : BIT;		-- aux93
  SIGNAL aux96 : BIT;		-- aux96
  SIGNAL aux97 : BIT;		-- aux97
  SIGNAL aux98 : BIT;		-- aux98
  SIGNAL aux102 : BIT;		-- aux102
  SIGNAL aux103 : BIT;		-- aux103
  SIGNAL aux105 : BIT;		-- aux105
  SIGNAL aux106 : BIT;		-- aux106
  SIGNAL aux108 : BIT;		-- aux108
  SIGNAL aux109 : BIT;		-- aux109
  SIGNAL aux110 : BIT;		-- aux110
  SIGNAL aux111 : BIT;		-- aux111
  SIGNAL aux112 : BIT;		-- aux112
  SIGNAL aux113 : BIT;		-- aux113
  SIGNAL aux114 : BIT;		-- aux114
  SIGNAL aux115 : BIT;		-- aux115
  SIGNAL aux118 : BIT;		-- aux118
  SIGNAL aux119 : BIT;		-- aux119
  SIGNAL aux120 : BIT;		-- aux120
  SIGNAL aux121 : BIT;		-- aux121
  SIGNAL aux122 : BIT;		-- aux122
  SIGNAL aux123 : BIT;		-- aux123
  SIGNAL aux124 : BIT;		-- aux124
  SIGNAL aux125 : BIT;		-- aux125
  SIGNAL aux127 : BIT;		-- aux127
  SIGNAL aux128 : BIT;		-- aux128
  SIGNAL aux129 : BIT;		-- aux129
  SIGNAL aux130 : BIT;		-- aux130

BEGIN
  aux130 <= ((NOT(aux105) OR aux98) AND NOT(rst));
  aux129 <= ((NOT(aux93) OR mdm(1)) AND NOT(rst));
  aux128 <= NOT(aux4 AND cdh(1));
  aux127 <= (NOT(mum(2)) AND (NOT(mum(1)) AND NOT(mdm(1))));
  aux125 <= (NOT(muh(1)) OR mdh(0));
  aux124 <= (mum(0) AND mum(3));
  aux123 <= (NOT(rst) AND NOT(aux87));
  aux122 <= (NOT(rst) AND aux87);
  aux121 <= (NOT(mdm(1)) AND NOT(muh(3)));
  aux120 <= (NOT(muh(1)) AND NOT(mdh(0)));
  aux119 <= NOT(NOT(cum(0)) OR cum(2));
  aux118 <= (NOT(cuh(2)) AND (cdm(2) AND (((cdh(0) AND NOT(
cuh(1))) AND NOT(cum(2))) AND cuh(0))));
  aux115 <= (cdm(2) AND NOT(cuh(1)));
  aux114 <= NOT(NOT(cdh(2)) OR cdh(3));
  aux113 <= (NOT(maquina) OR stop);
  aux112 <= (mum(3) AND NOT(rst));
  aux111 <= (mum(0) AND NOT(rst));
  aux110 <= (NOT(mum(0)) AND NOT(rst));
  aux109 <= NOT(aux89 OR NOT(mdm(1)));
  aux108 <= (mdm(3) AND NOT(rst));
  aux106 <= (aux105 AND NOT(rst));
  aux105 <= ((mdm(0) AND mum(0)) AND mum(3));
  aux103 <= (muh(2) AND NOT(muh(1)));
  aux102 <= ((((aux91 OR muh(2)) AND NOT(rst)) AND NOT(mum(2)
)) AND NOT(mum(1)));
  aux98 <= (mum(2) OR mum(1));
  aux97 <= (NOT(muh(0)) OR muh(2));
  aux96 <= ((aux79 OR NOT(muh(0))) OR NOT(mdh(1)));
  aux93 <= NOT((NOT(aux91) OR mum(2)) OR mum(1));
  aux91 <= NOT(NOT(aux73) OR NOT(mdm(2)));
  aux90 <= NOT(NOT(aux89) AND NOT(mdm(1)));
  aux89 <= NOT((mdm(2) AND NOT(mum(2))) AND NOT(mum(1)));
  aux87 <= NOT((((((((NOT(mdh(1)) OR NOT(mdm(2))) OR muh(2))
 OR mum(2)) OR mum(1)) OR muh(1)) OR NOT(mdh(0))) 
OR mdm(1)) OR NOT(muh(3)));
  aux79 <= (mdh(2) OR mdh(3));
  aux78 <= (NOT(aux74) OR NOT(mdm(2)));
  aux77 <= (NOT(rst) AND mdh(1));
  aux76 <= (aux75 AND mdm(2));
  aux75 <= (aux74 AND NOT(rst));
  aux74 <= (aux73 AND muh(0));
  aux73 <= (((NOT(mdm(3)) AND mdm(0)) AND mum(0)) AND mum(3)
);
  aux70 <= NOT(mdm(1) OR NOT(muh(3)));
  aux69 <= NOT(NOT(cum(1)) OR NOT(cum(0)));
  aux68 <= (cum(1) AND NOT(rst));
  aux67 <= NOT(((NOT(aux62) OR NOT(cdm(2))) OR cum(2)) OR 
NOT(maquina));
  aux64 <= NOT(NOT(aux33) AND cdm(1));
  aux63 <= (aux33 AND NOT(rst));
  aux62 <= NOT(NOT(cum(0)) OR NOT(cdm(0)));
  aux61 <= (NOT(rst) AND cdm(1));
  aux60 <= NOT(cum(2) OR NOT(maquina));
  aux59 <= (((((cuh(3) AND NOT(cdm(1))) AND NOT(cdm(3))) AND
 NOT(cdh(1))) AND cdh(2)) AND NOT(cdh(3)));
  aux54 <= NOT((((NOT(cdm(2)) OR NOT(cuh(1))) OR cum(2)) OR 
NOT(cuh(0))) OR NOT(maquina));
  aux49 <= NOT(NOT(cuh(3)) OR cuh(2));
  aux48 <= (((aux45 AND NOT(cdm(3))) AND cum(0)) AND cdm(0));
  aux45 <= (aux44 AND NOT(cdm(1)));
  aux44 <= (NOT(aux33) AND NOT(rst));
  aux43 <= NOT(NOT(aux42) OR NOT(maquina));
  aux42 <= NOT(cum(2) OR NOT(cuh(0)));
  aux41 <= (((cuh(3) AND NOT(cdh(1))) AND cdh(2)) AND NOT(
cdh(3)));
  aux38 <= NOT(NOT(aux37) AND cdm(2));
  aux37 <= NOT((((NOT(aux33) AND NOT(cdm(1))) AND NOT(cdm(3)
)) AND cum(0)) AND cdm(0));
  aux33 <= NOT(cum(3) AND NOT(cum(1)));
  aux32 <= (NOT(maquina) OR NOT(stop));
  aux31 <= ((((aux1 AND NOT(rst)) AND NOT(cdm(1))) AND NOT(
cdm(3))) AND cum(0));
  aux25 <= NOT(NOT(aux24) OR NOT(maquina));
  aux24 <= NOT((((((NOT(cdm(0)) OR cuh(2)) OR NOT(cdm(2))) 
OR NOT(cdh(0))) OR cuh(1)) OR cum(2)) OR NOT(cuh(0)
));
  aux18 <= ((NOT(cdh(1)) AND cdh(2)) AND NOT(cdh(3)));
  aux16 <= NOT((cuh(1) OR cum(2)) OR NOT(cuh(0)));
  aux14 <= ((((((((((aux4 AND NOT(cdh(1))) AND cdh(2)) AND 
NOT(cdh(3))) AND cdm(0)) AND NOT(cuh(2))) AND cdm(2)
) AND cdh(0)) AND NOT(cuh(1))) AND NOT(cum(2))) 
AND cuh(0));
  aux4 <= (aux3 AND cum(0));
  aux3 <= ((aux1 AND NOT(cdm(1))) AND NOT(cdm(3)));
  aux1 <= ((cum(3) AND cuh(3)) AND NOT(cum(1)));
  label0 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    maquina <= GUARDED (NOT(rst) AND (ctrl1 XOR maquina));
  END BLOCK label0;
  label1 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    stop <= GUARDED (((aux14 AND maquina) OR stop) AND NOT(rst));
  END BLOCK label1;
  label2 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    cdh (0) <= GUARDED ((((((NOT(aux4) OR aux18 OR NOT(cdm(0)) OR cuh(2)
 OR NOT(cdm(2))) AND cdh(0)) OR (aux4 AND cdm(0) 
AND NOT(cuh(2)) AND cdm(2) AND NOT(cdh(0)))) AND 
aux16) OR (cdh(0) AND NOT(aux16)) OR aux113) AND NOT(
rst) AND (cdh(0) OR maquina));
  END BLOCK label2;
  label3 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    cdh (1) <= GUARDED (aux32 AND ((((aux31 AND NOT(cdh(1)) AND NOT(
aux114)) OR (NOT(aux4) AND NOT(rst) AND cdh(1))) AND 
aux25) OR (NOT(rst) AND cdh(1) AND NOT(aux25))));
  END BLOCK label3;
  label4 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    cdh (2) <= GUARDED ((((NOT(aux128) XOR cdh(2)) AND aux24) OR (cdh(2)
 AND NOT(aux24)) OR aux113) AND NOT(rst) AND (
cdh(2) OR maquina));
  END BLOCK label4;
  label5 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    cdh (3) <= GUARDED (aux32 AND (((((aux128 OR NOT(cdh(2))) AND NOT(
rst) AND cdh(3)) OR (aux31 AND cdh(1) AND aux114)) 
AND aux25) OR (NOT(rst) AND cdh(3) AND NOT(aux25))));
  END BLOCK label5;
  label6 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    cuh (0) <= GUARDED (((((aux41 AND NOT(cuh(2)) AND cdh(0) AND NOT(
cuh(1))) OR aux38 OR cum(2)) AND cuh(0)) OR (NOT(aux38)
 AND NOT(cum(2)) AND NOT(cuh(0))) OR aux113) AND 
NOT(rst) AND (cuh(0) OR maquina));
  END BLOCK label6;
  label7 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    cuh (1) <= GUARDED (aux32 AND ((((aux38 AND NOT(rst) AND cuh(1)) OR 
(NOT(aux49) AND aux48 AND aux115)) AND aux43) OR (
NOT(rst) AND cuh(1) AND NOT(aux43))));
  END BLOCK label7;
  label8 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    cuh (2) <= GUARDED (aux32 AND ((((aux37 AND NOT(rst) AND cuh(2)) OR 
(aux48 AND NOT(cuh(2)))) AND aux54) OR (NOT(rst) 
AND cuh(2) AND NOT(aux54))));
  END BLOCK label8;
  label9 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    cuh (3) <= GUARDED (((((aux41 AND cdm(0) AND NOT(cuh(2)) AND cdm(2) 
AND cdh(0)) OR (aux38 AND cuh(3)) OR (((cum(3) AND 
NOT(cuh(3)) AND NOT(cum(1)) AND NOT(cdm(1)) AND NOT(
cdm(3)) AND cum(0) AND cdm(0) AND cuh(2)) OR aux49) AND
 cdm(2) AND cuh(1)) OR (cuh(3) AND cuh(2) AND 
aux115)) AND aux42) OR (cuh(3) AND NOT(aux42)) OR 
aux113) AND (cuh(3) OR maquina) AND NOT(rst));
  END BLOCK label9;
  label10 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    cdm (0) <= GUARDED (((aux59 AND cdm(0) AND aux118) OR (cdm(0) AND 
cum(2)) OR (((NOT(aux33) AND cum(0)) XOR cdm(0)) AND 
NOT(cum(2))) OR aux113) AND NOT(rst) AND (cdm(0) OR 
maquina));
  END BLOCK label10;
  label11 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    cdm (1) <= GUARDED (aux32 AND (((aux63 OR cdm(3) OR NOT(cum(0)) OR 
NOT(cdm(0)) OR NOT(cdm(2))) AND ((((aux63 AND cdm(1)
) OR aux45) AND aux62) OR (aux61 AND NOT(aux62))) 
AND aux60) OR (aux61 AND NOT(aux60))));
  END BLOCK label11;
  label12 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    cdm (2) <= GUARDED (((aux59 AND aux118) OR (cdm(2) AND cum(2)) OR ((
((aux33 OR (NOT(cdm(1)) AND cdm(3)) OR NOT(cum(0))
 OR NOT(cdm(0))) AND cdm(2)) OR (NOT(aux64) AND 
cum(0) AND cdm(0) AND NOT(cdm(2)))) AND NOT(cum(2))) OR
 aux113) AND NOT(rst) AND (cdm(2) OR maquina));
  END BLOCK label12;
  label13 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    cdm (3) <= GUARDED (aux32 AND ((((aux64 AND NOT(rst) AND cdm(3)) OR 
(aux44 AND cdm(1) AND NOT(cdm(3)))) AND aux67) OR 
(NOT(rst) AND cdm(3) AND NOT(aux67))));
  END BLOCK label13;
  label14 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    cum (0) <= GUARDED (((aux3 AND aux18 AND cdm(0) AND aux118) OR NOT(
cum(0)) OR aux113) AND NOT(rst) AND (cum(0) OR maquina)
);
  END BLOCK label14;
  label15 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    cum (1) <= GUARDED (((NOT(cum(3)) OR NOT(aux119)) AND ((NOT(cum(1)) 
AND NOT(rst) AND cum(0)) OR (aux68 AND NOT(cum(0))))
 AND NOT(aux113)) OR (aux68 AND NOT(maquina)));
  END BLOCK label15;
  label16 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    cum (2) <= GUARDED ((((NOT(aux69) AND NOT(rst) AND cum(2)) OR (aux68
 AND aux119)) AND NOT(aux113)) OR (NOT(rst) AND 
cum(2) AND NOT(maquina)));
  END BLOCK label16;
  label17 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    cum (3) <= GUARDED ((aux14 OR ((cum(3) XOR aux69) AND cum(2)) OR (
cum(3) AND (cum(1) OR NOT(cum(0))) AND NOT(cum(2))) OR 
aux113) AND (cum(3) OR maquina) AND NOT(rst));
  END BLOCK label17;
  label18 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    mdh (0) <= GUARDED (((((NOT(aux74) OR NOT(mdm(2)) OR muh(2) OR 
mum(2) OR mum(1) OR muh(1)) AND NOT(rst) AND mdh(0)) OR
 (aux76 AND NOT(muh(2)) AND NOT(mum(2)) AND NOT(
mum(1)) AND aux120)) AND aux70) OR (NOT(rst) AND mdh(0)
 AND NOT(aux70)));
  END BLOCK label18;
  label19 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    mdh (1) <= GUARDED ((((aux79 AND muh(1)) OR aux78 OR muh(2) OR 
mum(2) OR mum(1) OR (muh(1) AND mdh(0)) OR aux120 OR 
mdm(1)) AND aux77) OR (((aux75 AND NOT(mdh(1)) AND 
mdm(2) AND NOT(muh(2)) AND NOT(mum(2)) AND NOT(mum(1)) 
AND NOT(muh(1)) AND mdh(0)) OR (aux77 AND NOT(mdh(0)
))) AND NOT(mdm(1)) AND muh(3)) OR (aux77 AND 
mdh(0) AND aux121));
  END BLOCK label19;
  label20 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    mdh (2) <= GUARDED (((mdh(2) XOR aux74) AND aux122) OR (mdh(2) AND 
aux123));
  END BLOCK label20;
  label21 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    mdh (3) <= GUARDED ((((((mdh(2) AND NOT(mdm(3)) AND mdm(0) AND 
aux124) XOR mdh(3)) AND muh(0)) OR (mdh(3) AND NOT(
muh(0)))) AND aux122) OR (mdh(3) AND aux123));
  END BLOCK label21;
  label22 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    muh (0) <= GUARDED ((muh(0) AND NOT(rst) AND aux90) OR ((aux73 XOR 
muh(0)) AND NOT(rst) AND NOT(aux90)));
  END BLOCK label22;
  label23 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    muh (1) <= GUARDED ((((((aux97 AND aux91 AND NOT(mum(2)) AND NOT(
mum(1))) OR muh(1)) AND NOT(rst) AND NOT(mdm(1)) AND 
muh(3)) OR (((((aux96 AND mdm(2)) OR muh(2)) AND NOT(
mum(2)) AND NOT(mum(1))) OR aux125) AND (aux93 OR 
muh(1)) AND NOT(rst) AND aux121)) AND (muh(0) XOR 
muh(1))) OR (aux129 AND muh(1)));
  END BLOCK label23;
  label24 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    muh (2) <= GUARDED (((((aux97 OR muh(1)) AND aux102 AND NOT(mdm(1)) 
AND muh(3)) OR ((aux96 OR muh(2) OR aux125) AND 
aux102 AND aux121)) AND (((muh(0) XOR muh(2)) AND 
muh(1)) OR aux103)) OR (aux129 AND muh(2)));
  END BLOCK label24;
  label25 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    muh (3) <= GUARDED (((aux78 OR mum(2) OR mum(1) OR (NOT(muh(2)) AND 
muh(1)) OR aux103 OR mdm(1)) AND NOT(rst) AND muh(3)) 
OR (aux76 AND muh(2) AND NOT(mum(2)) AND NOT(mum(1)
) AND muh(1) AND aux121));
  END BLOCK label25;
  label26 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    mdm (0) <= GUARDED ((mdm(0) AND NOT(rst) AND aux98) OR ((mdm(0) XOR 
aux124) AND NOT(rst) AND NOT(aux98)));
  END BLOCK label26;
  label27 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    mdm (1) <= GUARDED ((aux130 AND mdm(1)) OR ((mdm(3) OR NOT(mdm(2))) 
AND aux106 AND aux127));
  END BLOCK label27;
  label28 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    mdm (2) <= GUARDED ((aux130 AND mdm(2)) OR (aux106 AND NOT(mdm(2)) 
AND NOT(mum(2)) AND NOT(mum(1)) AND mdm(1)) OR (
aux108 AND mdm(2) AND aux127));
  END BLOCK label28;
  label29 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    mdm (3) <= GUARDED (((mdm(3) XOR aux105) AND NOT(rst) AND aux109) OR
 (aux108 AND NOT(aux109)));
  END BLOCK label29;
  label30 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    mum (0) <= GUARDED aux110;
  END BLOCK label30;
  label31 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    mum (1) <= GUARDED ((aux110 AND mum(1)) OR ((NOT(mum(3)) OR mum(2)) 
AND aux111 AND NOT(mum(1))));
  END BLOCK label31;
  label32 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    mum (2) <= GUARDED ((((aux110 AND mum(2)) OR (aux111 AND NOT(mum(2))
)) AND mum(1)) OR (NOT(rst) AND mum(2) AND NOT(
mum(1))));
  END BLOCK label32;
  label33 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    mum (3) <= GUARDED (((((mum(0) XOR mum(3)) AND NOT(rst) AND mum(2)) 
OR (aux112 AND NOT(mum(2)))) AND mum(1)) OR ((NOT(
mum(0)) OR mum(2)) AND aux112 AND NOT(mum(1))));
  END BLOCK label33;
  label34 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    rtlalc_9 (0) <= GUARDED ((NOT(ctrl) OR cdh(0)) AND (ctrl OR mdh(0)));
  END BLOCK label34;
  label35 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    rtlalc_9 (1) <= GUARDED ((NOT(ctrl) OR cdh(1)) AND (mdh(1) OR ctrl));
  END BLOCK label35;
  label36 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    rtlalc_9 (2) <= GUARDED ((NOT(ctrl) OR cdh(2)) AND (mdh(2) OR ctrl));
  END BLOCK label36;
  label37 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    rtlalc_9 (3) <= GUARDED ((NOT(ctrl) OR cdh(3)) AND (mdh(3) OR ctrl));
  END BLOCK label37;
  label38 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    rtlalc_10 (0) <= GUARDED ((NOT(ctrl) OR cuh(0)) AND (muh(0) OR ctrl));
  END BLOCK label38;
  label39 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    rtlalc_10 (1) <= GUARDED ((NOT(ctrl) OR cuh(1)) AND (ctrl OR muh(1)));
  END BLOCK label39;
  label40 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    rtlalc_10 (2) <= GUARDED ((NOT(ctrl) OR cuh(2)) AND (ctrl OR muh(2)));
  END BLOCK label40;
  label41 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    rtlalc_10 (3) <= GUARDED ((ctrl OR muh(3)) AND (cuh(3) OR NOT(ctrl)));
  END BLOCK label41;
  label42 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    rtlalc_11 (0) <= GUARDED ((NOT(ctrl) OR cdm(0)) AND (mdm(0) OR ctrl));
  END BLOCK label42;
  label43 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    rtlalc_11 (1) <= GUARDED ((ctrl OR mdm(1)) AND (NOT(ctrl) OR cdm(1)));
  END BLOCK label43;
  label44 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    rtlalc_11 (2) <= GUARDED ((NOT(ctrl) OR cdm(2)) AND (mdm(2) OR ctrl));
  END BLOCK label44;
  label45 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    rtlalc_11 (3) <= GUARDED ((NOT(ctrl) OR cdm(3)) AND (mdm(3) OR ctrl));
  END BLOCK label45;
  label46 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    rtlalc_12 (0) <= GUARDED ((NOT(ctrl) OR cum(0)) AND (mum(0) OR ctrl));
  END BLOCK label46;
  label47 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    rtlalc_12 (1) <= GUARDED ((ctrl OR mum(1)) AND (cum(1) OR NOT(ctrl)));
  END BLOCK label47;
  label48 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    rtlalc_12 (2) <= GUARDED ((NOT(ctrl) OR cum(2)) AND (ctrl OR mum(2)));
  END BLOCK label48;
  label49 : BLOCK ((clk AND NOT((clk'STABLE))) = '1')
  BEGIN
    rtlalc_12 (3) <= GUARDED ((cum(3) AND ctrl) OR (mum(3) AND NOT(ctrl)));
  END BLOCK label49;

dh (0) <= rtlalc_9(0);

dh (1) <= rtlalc_9(1);

dh (2) <= rtlalc_9(2);

dh (3) <= rtlalc_9(3);

uh (0) <= rtlalc_10(0);

uh (1) <= rtlalc_10(1);

uh (2) <= rtlalc_10(2);

uh (3) <= rtlalc_10(3);

dm (0) <= rtlalc_11(0);

dm (1) <= rtlalc_11(1);

dm (2) <= rtlalc_11(2);

dm (3) <= rtlalc_11(3);

um (0) <= rtlalc_12(0);

um (1) <= rtlalc_12(1);

um (2) <= rtlalc_12(2);

um (3) <= rtlalc_12(3);
END;
