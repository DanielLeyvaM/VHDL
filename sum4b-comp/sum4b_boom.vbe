-- VHDL data flow description generated from `sum4b_boom`
--		date : Mon Oct 26 21:04:43 2020


-- Entity Declaration

ENTITY sum4b_boom IS
  PORT (
  a : in bit_vector(3 DOWNTO 0) ;	-- a
  b : in bit_vector(3 DOWNTO 0) ;	-- b
  ci : in BIT;	-- ci
  so : out bit_vector(3 DOWNTO 0) ;	-- so
  co : out BIT;	-- co
  vdd : in BIT;	-- vdd
  vss : in BIT	-- vss
  );
END sum4b_boom;


-- Architecture Declaration

ARCHITECTURE behaviour_data_flow OF sum4b_boom IS
  SIGNAL aux0 : BIT;		-- aux0
  SIGNAL aux1 : BIT;		-- aux1
  SIGNAL aux4 : BIT;		-- aux4
  SIGNAL aux5 : BIT;		-- aux5
  SIGNAL aux6 : BIT;		-- aux6
  SIGNAL aux7 : BIT;		-- aux7
  SIGNAL aux11 : BIT;		-- aux11
  SIGNAL aux12 : BIT;		-- aux12
  SIGNAL aux13 : BIT;		-- aux13

BEGIN
  aux13 <= NOT(b(3) XOR a(3));
  aux12 <= NOT(aux11 AND b(2));
  aux11 <= ((a(1) OR b(1)) AND (aux4 OR (a(1) AND b(1))));
  aux7 <= NOT(aux6 AND a(1));
  aux6 <= (aux4 OR b(1));
  aux5 <= (aux4 AND b(1));
  aux4 <= ((a(0) AND (b(0) OR ci)) OR aux1);
  aux1 <= (b(0) AND ci);
  aux0 <= (b(3) AND a(3));

co <= ((NOT(aux12) OR aux0 OR a(2)) AND (NOT(aux7) OR 
aux5 OR aux0 OR b(2)) AND (b(3) OR a(3)));

so (0) <= (a(0) XOR ci XOR b(0));

so (1) <= (aux4 XOR b(1) XOR a(1));

so (2) <= (aux11 XOR b(2) XOR a(2));

so (3) <= (((aux5 OR a(1)) AND aux6 AND aux13 AND b(2)) OR 
(aux7 AND NOT(aux5) AND NOT(aux13) AND NOT(b(2))) 
OR ((aux11 OR b(2)) AND aux13 AND a(2)) OR (aux12 
AND NOT(aux13) AND NOT(a(2))));
END;
